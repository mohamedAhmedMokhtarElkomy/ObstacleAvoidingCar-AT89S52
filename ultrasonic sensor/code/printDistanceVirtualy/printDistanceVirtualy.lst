
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	C:\Microcontroller project\microprocessor\ultrasonic sensor\code\printDistanceVirtualy\printDistanceVirtualy.asm
	Object File:	C:\Microcontroller project\microprocessor\ultrasonic sensor\code\printDistanceVirtualy\printDistanceVirtualy.hex
	List File:	C:\Microcontroller project\microprocessor\ultrasonic sensor\code\printDistanceVirtualy\printDistanceVirtualy.lst



 Line  I  Addr  Code            Source

    1:				;R5 is used in DLOOP for POPing from stack
    2:				;R6 is used in printing, storing ECHO times to be printed
    3:				;R7 is used in all Delays, as counter in DLOOP
    4:		N      0000	ORG 0
    5:	  0000	75 90 00	MOV P1,#00000000B      ; sets P1 as output port
    6:	  0003	75 80 00	MOV P0,#00000000B      ; sets P0 as output port
    7:
    8:		B      00A0	TRIG EQU P2.0
    9:	  0006	C2 A0		CLR TRIG               ; sets TRIG as output for sending trigger
   10:
   11:		B      00A1	ECHO EQU P2.1
   12:	  0008	D2 A1		SETB ECHO              ; sets ECHO as input for receiving echo
   13:
   14:	  000A			MAIN:
   15:	  000A	D2 A0			SETB TRIG		; starts the trigger pulse
   16:	  000C	11 60			ACALL Delay10M     	; Delay 10uS width for the trigger pulse
   17:	  000E	C2 A0			CLR TRIG         	; ends the trigger pulse
   18:	  0010	30 A1 FD		JNB ECHO,$    		; loops here until echo is received
   19:	  0013	74 00			MOV A, #0H
   20:
   21:					;Loop until ECHO pin is low
   22:	  0015	11 73			echoIS1:ACALL Delay1000M	;Delay 10 microsecond
   23:	  0017	04				INC A		;Increment number of 10 microseconds occured
   24:	  0018	20 A1 FA			JB ECHO, echoIS1;If ECHO is high loop to echo is 1
   25:	  001B	FE				MOV R6, A	;Store A value in R6
   26:	  001C	11 22				ACALL DLOOP      ;calls the display loop to print A which is stored in
   27:
   28:	  001E	11 49				ACALL DelaySec	 ;Delay 1 sec

   29:	  0020	80 E8				SJMP MAIN        ;short jumps to MAIN loop
   30:
   31:				;TODO remove
   32:				;DELAY1: MOV R6,#2D     ; 10uS delay
   33:				;LABEL1: DJNZ R6,LABEL1
   34:				;        RET
   35:
   36:				;Display LOOP for send char to serial port for printing it on virtual terminal
   37:	  0022	75 89 20	DLOOP:	MOV TMOD, #20H	; or 00100000B => Mode 2 for Timer 1 (8bit Auto Reload)
   38:	  0025	75 8D FD		MOV TH1, #0FDH	;Setting BaudRate of 9600 (-3). SMOD is 0 by default
   39:	  0028	75 98 50		MOV SCON, #50H	;Serial Mode 1, REN Enabled or #01010000B
   40:	  002B	D2 8E			SETB TR1
   41:
   42:	  002D	EE			MOV A, R6

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   43:	  002E	7F 00			MOV R7, #0D	;Counter to store count of numbers
   44:				;PrintDEC, print => for converting hex value to decimal then print each number
   45:	  0030				PrintDEC:
   46:	  0030	0F				INC R7
   47:	  0031	75 F0 0A			MOV B, #10D
   48:	  0034	84				DIV AB			;the quotient is stored in the accumulator and the remainder
				 is stored in the B register
   49:	  0035	C0 F0				PUSH B
   50:	  0037	B4 00 F6			CJNE A, #0D, PrintDEC	;Compare the first two operands and branches to the specifie
				d destination if their values are not equal
   51:
   52:	  003A	D0 05			print:	POP 05H			;POP to 05H which is R5
   53:	  003C	ED				MOV A, R5
   54:	  003D	24 30				ADD A, #'0'		;Add 0 hex value to print number from 0 to 9
   55:	  003F	F5 99				MOV SBUF, A
   56:	  0041	30 99 FD			JNB TI, $
   57:	  0044	C2 99				CLR TI
   58:						;ACALL DelaySec		;TODO i think it is not useful
   59:	  0046	DF F2				DJNZ R7, print		;decrements the byte indicated by the first operand and, if
				the resulting value is not zero, branches to the address specified in the second operand.
   60:
   61:	  0048	22		RET
   62:
   63:				;TODO store old value of R7
   64:	  0049			DelaySec:
   65:	  0049	75 89 01	    	MOV TMOD, #00000001B ;set timer0 as mode 1 16-bit
   66:	  004C	7F 14		    	MOV R7, #20D
   67:				    	;Timer Clk = 11.0592/12*1 = 0.9216 MHz
   68:					;50000 uS / (1 / 0.9216)uS = 46080 [65536 - 46080 = 19456 => 4C00H]
   69:	  004E			DelaySecLoop:
   70:	  004E	75 8A 00	    	MOV TL0, #00H
   71:	  0051	75 8C 4C	    	MOV TH0, #4CH
   72:	  0054	D2 8C		    	SETB TR0 ;Start timer 0
   73:
   74:	  0056	30 8D FD	    	JNB TF0, $ ;Loop until Timer 0 overflow = 1
   75:	  0059	C2 8C		    	CLR TR0 ;Stop timer 0
   76:	  005B	C2 8D		    	CLR TF0 ;Clear overFlow
   77:
   78:	  005D	DF EF		    	DJNZ R7, DelaySecLoop ;Decrement A then if A != 0 jump to DelaySecLoop
   79:
   80:				;    	POP 07H
   81:	  005F	22		RET
   82:
   83:				;Delay 10 micro sec
   84:	  0060			Delay10M:
   85:	  0060	75 89 01		MOV TMOD, #00000001B ;set timer0 as mode 2 8-bit auto relode
   86:	  0063	75 8A F7		MOV TL0, #0F7H
   87:	  0066	75 8C FF		MOV TH0, #0FFH
   88:
   89:	  0069	D2 8C			SETB TR0
   90:
   91:	  006B	30 8D FD		JNB TF0, $
   92:	  006E	C2 8C			CLR TR0
   93:	  0070	C2 8D			CLR TF0
   94:	  0072	22		RET
   95:				;Delay 10 micro sec

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

   96:	  0073			Delay1000M:
   97:	  0073	75 89 01		MOV TMOD, #00000001B ;set timer0 as mode 2 8-bit auto relode
   98:	  0076	75 8A 66		MOV TL0, #66H
   99:	  0079	75 8C FC		MOV TH0, #0FCH
  100:
  101:	  007C	D2 8C			SETB TR0
  102:
  103:	  007E	30 8D FD		JNB TF0, $
  104:	  0081	C2 8C			CLR TR0
  105:	  0083	C2 8D			CLR TF0
  106:	  0085	22		RET
  107:
  108:	  0086			close:
  109:					END





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
CLOSE				  CODE	    0086	 108
CY				  BIT	      D7
DELAY1000M			  CODE	    0073	  96
DELAY10M			  CODE	    0060	  84
DELAYSEC			  CODE	    0049	  64
DELAYSECLOOP			  CODE	    004E	  69
DLOOP				  CODE	    0022	  37
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ECHO				  NUMBER    00A1	  11
ECHOIS1				  CODE	    0015	  22
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
MAIN				  CODE	    000A	  14
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PRINT				  CODE	    003A	  52
PRINTDEC			  CODE	    0030	  45
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TRIG				  NUMBER    00A0	   8
TXD				  BIT	      B1
WR				  BIT	      B6
